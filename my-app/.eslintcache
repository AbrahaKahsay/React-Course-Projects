[{"D:\\projects\\React-Course-Projects\\my-app\\src\\index.js":"1","D:\\projects\\React-Course-Projects\\my-app\\src\\App.js":"2","D:\\projects\\React-Course-Projects\\my-app\\src\\reportWebVitals.js":"3","D:\\projects\\React-Course-Projects\\my-app\\src\\components\\HelloWorld\\HelloWorld.js":"4","D:\\projects\\React-Course-Projects\\my-app\\src\\components\\Button\\Button.js":"5","D:\\projects\\React-Course-Projects\\my-app\\src\\components\\Posts\\Posts.js":"6","D:\\projects\\React-Course-Projects\\my-app\\src\\components\\SinglePost\\SinglePost.js":"7","D:\\projects\\React-Course-Projects\\my-app\\src\\components\\AddPost\\AddPost.js":"8","D:\\projects\\React-Course-Projects\\my-app\\src\\components\\Dialog\\Dialog.js":"9","D:\\projects\\React-Course-Projects\\my-app\\src\\components\\Sidebar\\Sidebar.js":"10","D:\\projects\\React-Course-Projects\\my-app\\src\\components\\Navigation\\Navigation.js":"11","D:\\projects\\React-Course-Projects\\my-app\\src\\Context\\ButtonContext.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":681,"mtime":1611405368385,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":247,"mtime":1610648656263,"results":"17","hashOfConfig":"14"},{"size":296,"mtime":1611336691434,"results":"18","hashOfConfig":"14"},{"size":5327,"mtime":1611337065078,"results":"19","hashOfConfig":"14"},{"size":1468,"mtime":1611288358654,"results":"20","hashOfConfig":"14"},{"size":2702,"mtime":1610908173107,"results":"21","hashOfConfig":"14"},{"size":283,"mtime":1610908173108,"results":"22","hashOfConfig":"14"},{"size":447,"mtime":1611405496164,"results":"23","hashOfConfig":"14"},{"size":333,"mtime":1611405406412,"results":"24","hashOfConfig":"14"},{"size":109,"mtime":1611405326196,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1x7pxyb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\projects\\React-Course-Projects\\my-app\\src\\index.js",[],["54","55"],"D:\\projects\\React-Course-Projects\\my-app\\src\\App.js",[],"D:\\projects\\React-Course-Projects\\my-app\\src\\reportWebVitals.js",[],"D:\\projects\\React-Course-Projects\\my-app\\src\\components\\HelloWorld\\HelloWorld.js",[],["56","57"],"D:\\projects\\React-Course-Projects\\my-app\\src\\components\\Button\\Button.js",[],["58","59"],"D:\\projects\\React-Course-Projects\\my-app\\src\\components\\Posts\\Posts.js",["60"],"import { Component } from 'react';\r\nimport AddPost from '../AddPost/AddPost';\r\nimport Dialog from '../Dialog/Dialog';\r\nimport SinglePost from '../SinglePost/SinglePost';\r\n\r\nclass Posts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [\r\n                {\r\n                    id: '1',\r\n                    title: 'post 1',\r\n                    description: 'post1 description 1',\r\n                },\r\n            ],\r\n\r\n            postTitle: 'Posts List',\r\n            showPosts: true,\r\n            count: false,\r\n        };\r\n        console.log('[posts.js] constructor called');\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        console.log('[posts.js] get derived called');\r\n        return state;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log('[posts.js] should component update fired');\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('[posts.js] component did mount called');\r\n    }\r\n\r\n    togglePostsHandler = () => {\r\n        this.setState({\r\n            showPosts: !this.state.showPosts,\r\n        });\r\n    };\r\n\r\n    onchangeTitleHandler = (id, e) => {\r\n        const postIndex = this.state.posts.findIndex(\r\n            (post) => post.id === id,\r\n        );\r\n        const posts = [...this.state.posts];\r\n        posts[postIndex].title = e.target.value;\r\n\r\n        this.setState({\r\n            posts,\r\n        });\r\n    };\r\n\r\n    getPosts() {\r\n        if (!this.state.showPosts) return null;\r\n\r\n        // let posts = this.state.posts.map((post) => (\r\n        //     <SinglePost\r\n        //         title={post.title}\r\n        //         description={post.description}\r\n        //     />\r\n        // ));\r\n\r\n        let posts = [];\r\n\r\n        for (let post of this.state.posts) {\r\n            posts.push(\r\n                <SinglePost\r\n                    title={post.title}\r\n                    description={post.description}\r\n                    titleChange={this.onchangeTitleHandler.bind(\r\n                        this,\r\n                        post.id,\r\n                    )}\r\n                />,\r\n            );\r\n        }\r\n        return (\r\n            <div className='flex my-3'>\r\n                {this.state.posts.map((post, index) => {\r\n                    return (\r\n                        <SinglePost\r\n                            key={post.id}\r\n                            title={post.title}\r\n                            addpost={<AddPost />}\r\n                            description={post.description}\r\n                        >\r\n                            <div className='my-2'>\r\n                                <input\r\n                                    type='text'\r\n                                    value={post.title}\r\n                                    onChange={this.onchangeTitleHandler.bind(\r\n                                        this,\r\n                                        post.id,\r\n                                    )}\r\n                                    className='px-5 py-1 rounded-xl border border-gray-500'\r\n                                />\r\n                            </div>\r\n                        </SinglePost>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        console.log('[posts.js] render called');\r\n        let posts = null;\r\n\r\n        // if (this.state.showPosts) {\r\n        //     posts = (\r\n        //         <div className='flex my-3'>\r\n        //             <SinglePost\r\n        //                 title={this.state.posts[0].title}\r\n        //                 description={this.state.posts[0].description}\r\n        //             />\r\n        //             <SinglePost\r\n        //                 title={this.state.posts[1].title}\r\n        //                 description={this.state.posts[1].description}\r\n        //             />\r\n        //         </div>\r\n        //     );\r\n        // }\r\n        return (\r\n            <div>\r\n                <div>{this.state.count && 'show Count'}</div>\r\n                <h2 className='text-2xl my-3'>{this.state.postTitle}</h2>\r\n                <div>\r\n                    <button\r\n                        onClick={this.togglePostsHandler}\r\n                        className='px-5 py-3 bg-red-500 text-white'\r\n                    >\r\n                        {this.state.showPosts\r\n                            ? 'Hide Posts'\r\n                            : 'Show Posts'}\r\n                    </button>\r\n                </div>\r\n                <hr />\r\n                {this.getPosts()}\r\n\r\n                <div className='flex'>\r\n                    <div className='my-5 flex-1 w-full'>\r\n                        <AddPost />\r\n                    </div>\r\n\r\n                    <div className='flex-1'>\r\n                        <Dialog>\r\n                            <div>Showing the dialog data</div>\r\n                        </Dialog>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        console.log('[posts.js] snapshot fired');\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log('[posts.js] component did update fired');\r\n    }\r\n}\r\n\r\nexport default Posts;\r\n","D:\\projects\\React-Course-Projects\\my-app\\src\\components\\SinglePost\\SinglePost.js",[],"D:\\projects\\React-Course-Projects\\my-app\\src\\components\\AddPost\\AddPost.js",[],"D:\\projects\\React-Course-Projects\\my-app\\src\\components\\Dialog\\Dialog.js",[],"D:\\projects\\React-Course-Projects\\my-app\\src\\components\\Sidebar\\Sidebar.js",[],"D:\\projects\\React-Course-Projects\\my-app\\src\\components\\Navigation\\Navigation.js",["61"],"D:\\projects\\React-Course-Projects\\my-app\\src\\Context\\ButtonContext.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"62","replacedBy":"68"},{"ruleId":"64","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":111,"column":13,"nodeType":"72","messageId":"73","endLine":111,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":9,"column":17,"nodeType":"76","endLine":9,"endColumn":29},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],["77"],["78"],"no-unused-vars","'posts' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]